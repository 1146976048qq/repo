From e0bbce5e83bc003d86db5ffd37d7e62f9f64820f Mon Sep 17 00:00:00 2001
From: Yichao Yu <yyc1992@gmail.com>
Date: Fri, 7 Aug 2020 22:31:19 -0400
Subject: [PATCH 1/3] Make sure global constants are recognized as such in our
 own pass

The metadata on the load may be striped by LLVM when moving code around
---
 src/cgutils.cpp               |  5 +++++
 src/llvm-late-gc-lowering.cpp | 11 ++++++-----
 2 files changed, 11 insertions(+), 5 deletions(-)

diff --git a/src/cgutils.cpp b/src/cgutils.cpp
index bf6775b5d0..519514f0d6 100644
--- a/src/cgutils.cpp
+++ b/src/cgutils.cpp
@@ -234,6 +234,11 @@ static Value *julia_pgv(jl_codectx_t &ctx, const char *cname, void *addr)
         gv = new GlobalVariable(*M, T_pjlvalue,
                                 false, GlobalVariable::PrivateLinkage,
                                 NULL, localname);
+    // LLVM passes sometimes strip metadata when moving load around
+    // since the load at the new location satisfy the same condition as the origional one.
+    // Mark the global as constant to LLVM code using our own metadata
+    // which is much less likely to be striped.
+    gv->setMetadata("julia.constgv", MDNode::get(gv->getContext(), None));
     assert(localname == gv->getName());
     assert(!gv->hasInitializer());
     return gv;
diff --git a/src/llvm-late-gc-lowering.cpp b/src/llvm-late-gc-lowering.cpp
index 9b8e53eb5a..ba3a2a9365 100644
--- a/src/llvm-late-gc-lowering.cpp
+++ b/src/llvm-late-gc-lowering.cpp
@@ -1124,11 +1124,12 @@ static bool isLoadFromConstGV(LoadInst *LI)
 {
     // We only emit single slot GV in codegen
     // but LLVM global merging can change the pointer operands to GEPs/bitcasts
-    if (!isa<GlobalVariable>(LI->getPointerOperand()->stripInBoundsOffsets()))
-        return false;
-    MDNode *TBAA = LI->getMetadata(LLVMContext::MD_tbaa);
-    if (isTBAA(TBAA, {"jtbaa_const"}))
-        return true;
+    if (auto gv = dyn_cast<GlobalVariable>(LI->getPointerOperand()->stripInBoundsOffsets())) {
+        MDNode *TBAA = LI->getMetadata(LLVMContext::MD_tbaa);
+        if (isTBAA(TBAA, {"jtbaa_const"}) || gv->getMetadata("julia.constgv")) {
+            return true;
+        }
+    }
     return false;
 }
 
-- 
2.28.0

