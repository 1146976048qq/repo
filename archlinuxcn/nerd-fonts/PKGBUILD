# Maintainer:Francois Menning <f.menning@pm.me>
# Contributor: Super Bo <supernbo at gmail dot com>
# Contributor: glider <samtron1412 {at} gmail {dot} com>
# Contributor: devopsdeluxe <dan.ray.beste@gmail.com>

pkgbase='nerd-fonts'

declare -A _fonts=(
  ["$pkgbase-3270"]="3270"
  ["$pkgbase-agave"]="Agave"
  ["$pkgbase-anonymous-pro"]="AnonymousPro"
  ["$pkgbase-arimo"]="Arimo"
  ["$pkgbase-aurulent-sans-mono"]="AurulentSansMono"
  ["$pkgbase-big-blue-terminal"]="BigBlueTerminal"
  ["$pkgbase-bitstream-vera-sans-mono"]="BitstreamVeraSansMono"
  ["$pkgbase-cascadia-code"]="CascadiaCode"
  ["$pkgbase-code-new-roman"]="CodeNewRoman"
  ["$pkgbase-cousine"]="Cousine"
  ["$pkgbase-daddy-time-mono"]="DaddyTimeMono"
  ["$pkgbase-deja-vu-sans-mono"]="DejaVuSansMono"
  ["$pkgbase-droid-sans-mono"]="DroidSansMono"
  ["$pkgbase-fantasque-sans-mono"]="FantasqueSansMono"
  ["$pkgbase-fira-code"]="FiraCode"
  ["$pkgbase-fira-mono"]="FiraMono"
  ["$pkgbase-gohu"]="Gohu"
  ["$pkgbase-go-mono"]="Go-Mono"
  ["$pkgbase-hack"]="Hack"
  ["$pkgbase-hasklig"]="Hasklig"
  ["$pkgbase-heavy-data"]="HeavyData"
  ["$pkgbase-hermit"]="Hermit"
  ["$pkgbase-ia-writer"]="iA-Writer"
  ["$pkgbase-ibm-plex-mono"]="IBMPlexMono"
  ["$pkgbase-inconsolata"]="Inconsolata"
  ["$pkgbase-inconsolata-go"]="InconsolataGo"
  ["$pkgbase-inconsolata-lgc"]="InconsolataLGC"
  ["$pkgbase-iosevka"]="Iosevka"
  ["$pkgbase-jet-brains-mono"]="JetBrainsMono"
  ["$pkgbase-lekton"]="Lekton"
  ["$pkgbase-liberation-mono"]="LiberationMono"
  ["$pkgbase-meslo"]="Meslo"
  ["$pkgbase-monofur"]="Monofur"
  ["$pkgbase-monoid"]="Monoid"
  ["$pkgbase-mononoki"]="Mononoki"
  ["$pkgbase-mplus"]="MPlus"
  ["$pkgbase-noto"]="Noto"
  ["$pkgbase-open-dyslexic"]="OpenDyslexic"
  ["$pkgbase-overpass"]="Overpass"
  ["$pkgbase-pro-font"]="ProFont"
  ["$pkgbase-proggy-clean"]="ProggyClean"
  ["$pkgbase-roboto-mono"]="RobotoMono"
  ["$pkgbase-share-tech-mono"]="ShareTechMono"
  ["$pkgbase-source-code-pro"]="SourceCodePro"
  ["$pkgbase-space-mono"]="SpaceMono"
  ["$pkgbase-terminus"]="Terminus"
  ["$pkgbase-tinos"]="Tinos"
  ["$pkgbase-ubuntu"]="Ubuntu"
  ["$pkgbase-ubuntu-mono"]="UbuntuMono"
  ["$pkgbase-victor-mono"]="VictorMono"
)

pkgname=("$pkgbase-complete" ${!_fonts[@]})
pkgver=2.1.0
pkgrel=3
pkgdesc='Iconic font aggregator, collection, & patcher. 3,600+ icons, 50+ patched fonts.'
arch=('any')
url='https://github.com/ryanoasis/nerd-fonts'
license=('MIT')
depends=('fontconfig')
conflicts=('nerd-fonts-git' 'nerd-fonts-complete-mono-glyphs')
source=(
  'fix-installer-font-dir.patch'
  "${pkgbase}-${pkgver}.tar.gz::https://github.com/ryanoasis/nerd-fonts/archive/v${pkgver}.tar.gz"
)
sha256sums=('ccf93b108044a87bfb29c3f836d2ce4d5bdb1829702e532a69ccb4ab4aecaceb'
            'a084ca91a174b547bab4523507824c76aa91ebcf38f9256a4ffd181813f87bd8')

prepare() {
  cd "$srcdir/$pkgbase-$pkgver"

  patch -Np1 -i "$srcdir"/fix-installer-font-dir.patch
}

build() {
  cd "$srcdir/$pkgbase-$pkgver"

  bash install.sh \
    --quiet \
    --clean \
    --otf \
    --complete
}

package_nerd-fonts-complete() {
  cd "$srcdir/$pkgbase-$pkgver"

  # Prepare destination directories
  libdir="${pkgdir}/usr/lib/${pkgname}"
  otfdir="${pkgdir}/usr/share/fonts/${pkgname}/OTF"
  ttfdir="${pkgdir}/usr/share/fonts/${pkgname}/TTF"

  install -dm755 "${libdir}"
  install -dm755 "${otfdir}"
  install -dm755 "${ttfdir}"

  # Install fonts
  install -m644 release/NerdFonts/*.otf "${otfdir}"
  install -m644 release/NerdFonts/*.ttf "${ttfdir}"

  # Install scripts
  install -m644 bin/scripts/lib/*.sh "${libdir}"
}

_package() {
  local name="$1"

  conflicts+=("$pkgbase-complete")
  pkgdesc="Patched font $name from the nerd-fonts library"

  cd "$srcdir/$pkgbase-$pkgver"

  find "patched-fonts/$name" -iname "*Nerd Font Complete*.otf" ! -name "*Windows Compatible*" \
    -exec install -Dm644 -t "$pkgdir/usr/share/fonts/$pkgbase" {} \;
  # we prefer otf, if no one found, use ttf.
  if [[ ! -s "$pkgdir/usr/share/fonts/$pkgbase" ]]; then
    find "patched-fonts/$name" -iname "*Nerd Font Complete*.ttf" ! -name "*Windows Compatible*" \
      -exec install -Dm644 -t "$pkgdir/usr/share/fonts/$pkgbase" {} \;
  fi
}

for _pkgname in ${!_fonts[@]}; do
  eval "package_${_pkgname} () { _package '${_fonts[$_pkgname]}' ; }"
done
