# Maintainer: Evangelos Foutras <evangelos@foutrelis.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>

pkgname=('llvm-julia' 'llvm-libs-julia' 'llvm-ocaml-julia')
pkgver=8.0.1
pkgrel=3
_ocaml_ver=4.08.1
arch=(i686 x86_64 armv7h aarch64)
url="https://llvm.org/"
license=('custom:University of Illinois/NCSA Open Source License')
makedepends=('cmake' 'ninja' 'libffi' 'libedit' 'ncurses' 'libxml2'
             "ocaml=$_ocaml_ver" 'ocaml-ctypes' 'ocaml-findlib'
             'python-sphinx' 'python-recommonmark')
options=('staticlibs' '!strip')
source=(https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver/llvm-$pkgver.src.tar.xz
        llvm-D27629-AArch64-large_model.patch
        llvm-D34078-vectorize-fdiv.patch
        llvm-6.0-NVPTX-addrspaces.patch
        llvm-7.0-D44650.patch
        llvm-6.0-DISABLE_ABI_CHECKS.patch
        llvm7-D50010-VNCoercion-ni.patch
        llvm-8.0-D50167-scev-umin.patch
        llvm7-windows-race.patch
        llvm-D57118-powerpc.patch
        llvm8-WASM-addrspaces.patch
        llvm-exegesis-mingw.patch
        llvm-test-plugin-mingw.patch
        llvm-8.0-D66401-mingw-reloc.patch
        llvm-config.h)
sha256sums=('44787a6d02f7140f145e2250d56c9f849334e11f9ae379827510ed72f12b75e7'
            '9f4851adbd9353c4d362ea604d07bcf8c565e1b06ea312986f5ad98d69853ae3'
            '0218121facb405a70f85b3b09a13d9d335d568da8fdd97740ff62bdd07c357a7'
            '0c333d25d9e48d3270d0c0bb7a8c239649283cf55bec4f1004326b99eb17b1e1'
            '390ec9982d778383566fc87e56acd94027c99670d19434b5914ec738eb9ca5c0'
            'cf5f331af7cff3fc05a9918d6e533f88c5f78568d45d4fd564fea8151a578e04'
            '8657ff0877ce13389da1de7c97cc7d85ed96f848f868044a50dd0ca094794ca3'
            '24cd3f59c94d8cc3836ace71740b2321ae123de828b86c619c4dfaec51173c3d'
            'b5ee35a946dc297885d7e8a0aaac1025a87ee09abd70e490314a919aac26e3e6'
            '5ca5700ffb5bdaa38bdff5371f520cb0436f4c098fa29dc32ec2aca4812ebf6f'
            'd81c8f8e119758a8c5f551a64e0d1e4b37f60559745a2a6ad3ec4098e453e684'
            '778fb63f1025de7d4c7ecc4647026d9781971c3e9975817b703bab238364015e'
            'd2bee469b78630a513ae543a9b619aa686db2188a7c68086356e4165191ae78b'
            '9a0e4c25dd54d7202d357aaad2fa692e80d3ecb0ed9d661d4b2759fb75b96397'
            '597dc5968c695bbdbb0eac9e8eb5117fcd2773bc91edf5ec103ecffffab8bc48')

_FLTO=''

# _FLTO='-flto'
# if [[ "${CARCH}" == "aarch64" ]] || [[ "${CARCH}" == "armv7h" ]]; then
#     # GCC miscompiles LLVM on AArch64 with LTO and segfault on arm during linking...
#     _FLTO=''
# fi

apply_julia_patch() {
  local name=$1
  msg "Applying Julia patch $name"
  patch -p1 < ../$name.patch
}

prepare() {
  rm -rf bin/
  mkdir -p bin/

  for p in cc c++ gcc g++; do
    cat > bin/$p <<EOF
#!/bin/bash
exec /usr/bin/$p $_FLTO "\${@}"
EOF
    chmod +x bin/$p
  done

  cd "$srcdir/llvm-$pkgver.src"
  mkdir -p build

  # TODO
  apply_julia_patch llvm-D27629-AArch64-large_model
  apply_julia_patch llvm-D34078-vectorize-fdiv
  apply_julia_patch llvm-6.0-NVPTX-addrspaces
  apply_julia_patch llvm-7.0-D44650
  apply_julia_patch llvm-6.0-DISABLE_ABI_CHECKS
  apply_julia_patch llvm7-D50010-VNCoercion-ni
  apply_julia_patch llvm-8.0-D50167-scev-umin
  apply_julia_patch llvm7-windows-race
  apply_julia_patch llvm-D57118-powerpc
  apply_julia_patch llvm8-WASM-addrspaces
  apply_julia_patch llvm-exegesis-mingw
  apply_julia_patch llvm-test-plugin-mingw
  apply_julia_patch llvm-8.0-D66401-mingw-reloc

  # Arch patches
  # msg "Applying Arch patches"
}

build() {
  cd "$srcdir/llvm-$pkgver.src/build"

  export PATH="${srcdir}/bin:${PATH}"
  CFLAGS+=' -ggdb1 -O3 -fasynchronous-unwind-tables'
  CXXFLAGS+=' -ggdb1 -O3 -fasynchronous-unwind-tables'
  LDFLAGS+=' -O3 -fasynchronous-unwind-tables'

  cmake .. -G Ninja \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DLLVM_HOST_TRIPLE=$CHOST \
        -DLLVM_BUILD_LLVM_DYLIB=ON \
        -DLLVM_LINK_LLVM_DYLIB=ON \
        -DLLVM_INSTALL_UTILS=ON \
        -DLLVM_ENABLE_RTTI=ON \
        -DLLVM_ENABLE_FFI=ON \
        -DLLVM_BUILD_TESTS=ON \
        -DLLVM_BUILD_DOCS=ON \
        -DLLVM_ENABLE_SPHINX=ON \
        -DLLVM_ENABLE_DOXYGEN=OFF \
        -DSPHINX_WARNINGS_AS_ERRORS=OFF \
        -DFFI_INCLUDE_DIR=$(pkg-config --variable=includedir libffi) \
        -DLLVM_BINUTILS_INCDIR=/usr/include
  ninja all ocaml_doc
}

package_llvm-julia() {
  pkgdesc="Collection of modular and reusable compiler and toolchain technologies (with patch for julia)"
  depends=("llvm-libs-julia=$pkgver-$pkgrel" 'perl')
  optdepends=('python-setuptools: for using lit (LLVM Integrated Tester)')
  conflicts=("llvm")
  provides=("llvm=$pkgver-$pkgrel")

  cd "$srcdir/llvm-$pkgver.src/build"

  DESTDIR="$pkgdir" ninja install

  # Include lit for running lit-based tests in other projects
  pushd ../utils/lit
  python3 setup.py install --root="$pkgdir" -O1
  popd

  # Remove documentation sources
  rm -r "$pkgdir"/usr/share/doc/llvm/html/{_sources,.buildinfo}

  # The runtime libraries go into llvm-libs
  mv -f "$pkgdir"/usr/lib/lib{LLVM,LTO}*.so* "$srcdir"
  mv -f "$pkgdir"/usr/lib/LLVMgold.so "$srcdir"

  # OCaml bindings go to a separate package
  rm -rf "$srcdir"/ocaml.{lib,doc}
  mv "$pkgdir/usr/lib/ocaml" "$srcdir/ocaml.lib"
  mv "$pkgdir/usr/share/doc/llvm/ocaml-html" "$srcdir/ocaml.doc"

  if [[ $CARCH == x86_64 ]]; then
    # Needed for multilib (https://bugs.archlinux.org/task/29951)
    # Header stub is taken from Fedora
    mv "$pkgdir/usr/include/llvm/Config/llvm-config"{,-64}.h
    cp "$srcdir/llvm-config.h" "$pkgdir/usr/include/llvm/Config/llvm-config.h"
  fi

  install -Dm644 ../LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_llvm-libs-julia() {
  pkgdesc="LLVM runtime libraries (with patch for julia)"
  depends=('gcc-libs' 'zlib' 'libffi' 'libedit' 'ncurses' 'libxml2')
  conflicts=("llvm-libs")
  provides=("llvm-libs=$pkgver-$pkgrel")

  install -d "$pkgdir/usr/lib"
  cp -P \
     "$srcdir"/lib{LLVM,LTO}*.so* \
     "$srcdir"/LLVMgold.so \
     "$pkgdir/usr/lib/"

  # Symlink LLVMgold.so from /usr/lib/bfd-plugins
  # https://bugs.archlinux.org/task/28479
  install -d "$pkgdir/usr/lib/bfd-plugins"
  ln -s ../LLVMgold.so "$pkgdir/usr/lib/bfd-plugins/LLVMgold.so"

  install -Dm644 "$srcdir/llvm-$pkgver.src/LICENSE.TXT" \
          "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_llvm-ocaml-julia() {
  pkgdesc="OCaml bindings for LLVM (with patch for julia)"
  depends=("llvm-julia=$pkgver-$pkgrel" "ocaml=$_ocaml_ver" 'ocaml-ctypes')
  conflicts=("llvm-ocaml")
  provides=("llvm-ocaml=$pkgver-$pkgrel")

  install -d "$pkgdir"/{usr/lib,usr/share/doc/llvm-ocaml}
  cp -a "$srcdir/ocaml.lib" "$pkgdir/usr/lib/ocaml"
  cp -a "$srcdir/ocaml.doc" "$pkgdir/usr/share/doc/llvm-ocaml/html"

  install -Dm644 "$srcdir/llvm-$pkgver.src/LICENSE.TXT" \
          "$pkgdir/usr/share/licenses/llvm-ocaml/LICENSE"
}
