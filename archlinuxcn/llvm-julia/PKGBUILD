# Maintainer: Evangelos Foutras <evangelos@foutrelis.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>

pkgname=('llvm-julia' 'llvm-libs-julia' 'llvm-ocaml-julia')
pkgver=6.0.1
pkgrel=2
_ocaml_ver=4.06.0
arch=(i686 x86_64 armv7h aarch64)
url="https://llvm.org/"
license=('custom:University of Illinois/NCSA Open Source License')
makedepends=('cmake' 'ninja' 'libffi' 'libedit' 'ncurses' 'libxml2' 'python-sphinx'
             "ocaml=$_ocaml_ver" 'ocaml-ctypes' 'ocaml-findlib')
options=('staticlibs' '!strip')
source=(https://releases.llvm.org/$pkgver/llvm-$pkgver.src.tar.xz
        # Arch patches
        D44391-export-LLVM_DYLIB_COMPONENTS-in-LLVMConfig.cmake.patch
        D44420-cmake-fix-a-typo-in-llvm_config-macro.patch
        llvm-config.h
        llvm-D27629-AArch64-large_model.patch
        llvm-D34078-vectorize-fdiv.patch
        # llvm-instcombine-ptrtoint.patch
       )
sha256sums=('b6d6c324f9c71494c0ccaf3dac1f16236d970002b42bb24a6c9e1634f7d0f4e2'
            '96e2f3ca8b7d1bdbe2606a1eebb12c57b39838d1bcc15e40388e8d59649a9f4a'
            '5cc114fd711e6ea836a6270b2f713e2e751c49e8b5ffa6c6812127ca801acef3'
            '597dc5968c695bbdbb0eac9e8eb5117fcd2773bc91edf5ec103ecffffab8bc48')

# $(eval $(call LLVM_PATCH,llvm-6.0-NVPTX-addrspaces)) # NVPTX
# $(eval $(call LLVM_PATCH,llvm-D42262-jumpthreading-not-i1)) # remove for 7.0
# $(eval $(call LLVM_PATCH,llvm-PPC-addrspaces)) # remove for 7.0
# $(eval $(call LLVM_PATCH,llvm-D42260)) # remove for 7.0
# $(eval $(call LLVM_PATCH,llvm-rL326843-missing-header)) # remove for 7.0
# $(eval $(call LLVM_PATCH,llvm-6.0-r327540)) # remove for 7.0
# $(eval $(call LLVM_PATCH,llvm-6.0.0_D27296-libssp)) # remove for 7.0
# $(eval $(call LLVM_PATCH,llvm-6.0-D44650)) # mingw32 build fix
# $(eval $(call LLVM_PATCH,llvm-D45008)) # remove for 7.0
# $(eval $(call LLVM_PATCH,llvm-D45070)) # remove for 7.0
# $(eval $(call LLVM_PATCH,llvm-6.0.0-ifconv-D45819)) # remove for 7.0
# $(eval $(call LLVM_PATCH,llvm-D46460))
# $(eval $(call LLVM_PATCH,llvm-rL332680)) # remove for 7.0
# $(eval $(call LLVM_PATCH,llvm-rL332682)) # remove for 7.0
# $(eval $(call LLVM_PATCH,llvm-rL332302)) # remove for 7.0
# $(eval $(call LLVM_PATCH,llvm-rL332694)) # remove for 7.0
# $(eval $(call LLVM_PATCH,llvm-rL327898)) # remove for 7.0
# $(eval $(call LLVM_PATCH,llvm-6.0-DISABLE_ABI_CHECKS))

_FLTO=''

# _FLTO='-flto'
# if [[ "${CARCH}" == "aarch64" ]] || [[ "${CARCH}" == "armv7h" ]]; then
#     # GCC miscompiles LLVM on AArch64 with LTO and segfault on arm during linking...
#     _FLTO=''
# fi

apply_julia_patch() {
  local name=$1
  msg "Applying Julia patch $name"
  patch -p1 < ../llvm-$name.patch
}

prepare() {
  rm -rf bin/
  mkdir -p bin/

  for p in cc c++ gcc g++; do
    cat > bin/$p <<EOF
#!/bin/bash
exec /usr/bin/$p $_FLTO "\${@}"
EOF
    chmod +x bin/$p
  done

  cd "$srcdir/llvm-$pkgver.src"
  mkdir -p build

  # TODO
  # apply_julia_patch D27629-AArch64-large_model
  # apply_julia_patch instcombine-ptrtoint
  # apply_julia_patch D34078-vectorize-fdiv
  # apply_julia_patch arm-reset
  # apply_julia_patch D38924-faultmap-reset
  # apply_julia_patch D38925-neg-implicit-null

  # Arch patches
  msg "Applying Arch patches"
  # https://reviews.llvm.org/D44391
  patch -Np1 -i ../D44391-export-LLVM_DYLIB_COMPONENTS-in-LLVMConfig.cmake.patch

  # https://reviews.llvm.org/D44420
  patch -Np0 -i ../D44420-cmake-fix-a-typo-in-llvm_config-macro.patch
}

build() {
  cd "$srcdir/llvm-$pkgver.src/build"

  export PATH="${srcdir}/bin:${PATH}"
  CFLAGS+=' -ggdb1 -O3 -fasynchronous-unwind-tables'
  CXXFLAGS+=' -ggdb1 -O3 -fasynchronous-unwind-tables'
  LDFLAGS+=' -O3 -fasynchronous-unwind-tables'

  cmake .. -G Ninja \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLLVM_HOST_TRIPLE=$CHOST \
    -DLLVM_BUILD_LLVM_DYLIB=ON \
    -DLLVM_LINK_LLVM_DYLIB=ON \
    -DLLVM_INSTALL_UTILS=ON \
    -DLLVM_ENABLE_RTTI=ON \
    -DLLVM_ENABLE_FFI=ON \
    -DLLVM_BUILD_TESTS=ON \
    -DLLVM_BUILD_DOCS=ON \
    -DLLVM_ENABLE_SPHINX=ON \
    -DLLVM_ENABLE_DOXYGEN=OFF \
    -DSPHINX_WARNINGS_AS_ERRORS=OFF \
    -DFFI_INCLUDE_DIR=$(pkg-config --variable=includedir libffi) \
    -DLLVM_BINUTILS_INCDIR=/usr/include
  ninja all ocaml_doc
}

check() {
  cd "$srcdir/llvm-$pkgver.src/build"
  # ninja check
}

package_llvm-julia() {
  pkgdesc="Collection of modular and reusable compiler and toolchain technologies (with patch for julia)"
  depends=("llvm-libs-julia=$pkgver-$pkgrel" 'perl')
  optdepends=('python-setuptools: for using lit (LLVM Integrated Tester)')
  conflicts=("llvm")
  provides=("llvm=$pkgver-$pkgrel")

  cd "$srcdir/llvm-$pkgver.src"

  DESTDIR="$pkgdir" ninja install

  # Include lit for running tests with clang and friends
  pushd ../utils/lit
  python3 setup.py install --root="$pkgdir" -O1
  popd

  # Remove documentation sources
  rm -r "$pkgdir"/usr/share/doc/llvm/html/{_sources,.buildinfo}

  # The runtime libraries go into llvm-libs
  mv -f "$pkgdir"/usr/lib/lib{LLVM,LTO}*.so* "$srcdir"
  mv -f "$pkgdir"/usr/lib/LLVMgold.so "$srcdir"

  # OCaml bindings go to a separate package
  rm -rf "$srcdir"/ocaml.{lib,doc}
  mv "$pkgdir/usr/lib/ocaml" "$srcdir/ocaml.lib"
  mv "$pkgdir/usr/share/doc/llvm/ocaml-html" "$srcdir/ocaml.doc"

  if [[ $CARCH == x86_64 ]]; then
    # Needed for multilib (https://bugs.archlinux.org/task/29951)
    # Header stub is taken from Fedora
    mv "$pkgdir/usr/include/llvm/Config/llvm-config"{,-64}.h
    cp "$srcdir/llvm-config.h" "$pkgdir/usr/include/llvm/Config/llvm-config.h"
  fi

  install -Dm644 ../LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_llvm-libs-julia() {
  pkgdesc="LLVM runtime libraries (with patch for julia)"
  depends=('gcc-libs' 'zlib' 'libffi' 'libedit' 'ncurses' 'libxml2')
  conflicts=("llvm-libs")
  provides=("llvm-libs=$pkgver-$pkgrel")

  install -d "$pkgdir/usr/lib"
  cp -P \
    "$srcdir"/lib{LLVM,LTO}*.so* \
    "$srcdir"/LLVMgold.so \
    "$pkgdir/usr/lib/"

  # Symlink LLVMgold.so from /usr/lib/bfd-plugins
  # https://bugs.archlinux.org/task/28479
  install -d "$pkgdir/usr/lib/bfd-plugins"
  ln -s ../LLVMgold.so "$pkgdir/usr/lib/bfd-plugins/LLVMgold.so"

  install -Dm644 "$srcdir/llvm-$pkgver.src/LICENSE.TXT" \
    "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_llvm-ocaml-julia() {
  pkgdesc="OCaml bindings for LLVM (with patch for julia)"
  depends=("llvm-julia=$pkgver-$pkgrel" "ocaml=$_ocaml_ver" 'ocaml-ctypes')
  conflicts=("llvm-ocaml")
  provides=("llvm-ocaml=$pkgver-$pkgrel")

  cd "$srcdir/llvm-$pkgver.src"

  install -d "$pkgdir"/{usr/lib,usr/share/doc/llvm-ocaml}
  cp -a "$srcdir/ocaml.lib" "$pkgdir/usr/lib/ocaml"
  cp -a "$srcdir/ocaml.doc" "$pkgdir/usr/share/doc/llvm-ocaml/html"

  install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}
