diff --git a/tools/seafile-admin b/tools/seafile-admin
index b5e199e..982da69 100755
--- a/tools/seafile-admin
+++ b/tools/seafile-admin
@@ -5,16 +5,6 @@
 
 import sys
 
-####################
-### Requires Python 2.6+
-####################
-if sys.version_info.major == 3:
-    print 'Python 3 not supported yet. Quit now'
-    sys.exit(1)
-if sys.version_info.minor < 6:
-    print 'Python 2.6 or above is required. Quit now'
-    sys.exit(1)
-
 import os
 import time
 import re
@@ -43,6 +33,8 @@ SEAHUB_DOWNLOAD_URL = 'https://seafile.com.cn/downloads/seahub-latest.tar.gz'
 ####################
 cwd = os.getcwd()
 SCRIPT_NAME = os.path.basename(sys.argv[0])
+# User the bundled older Django
+sys.path.insert(0, os.path.join(cwd, 'seafile-server', 'seahub', 'thirdpart'))
 
 PYTHON = sys.executable
 
@@ -464,8 +455,8 @@ def init_seahub():
     # create seahub_settings.py
     create_seahub_settings_py()
 
-    argv = [PYTHON, 'manage.py', 'syncdb']
-    # Set proper PYTHONPATH before run django syncdb command
+    argv = [PYTHON, 'manage.py', 'migrate']
+    # Set proper PYTHONPATH before run django migrate command
     env = get_seahub_env()
 
     print
@@ -474,7 +465,7 @@ def init_seahub():
     print
 
     if run_argv(argv, cwd=seahub_dir, env=env) != 0:
-        error('Seahub syncdb failed')
+        error('Seahub migrate failed')
 
     info('done')
 
@@ -483,10 +474,10 @@ def init_seahub():
 
 
 def check_django_version():
-    '''Requires django 1.8'''
+    '''Requires django 1.11'''
     import django
-    if django.VERSION[0] != 1 or django.VERSION[1] != 8:
-        error('Django 1.8 is required')
+    if django.VERSION[0] != 1 or django.VERSION[1] != 11:
+        error('Django 1.11 is required')
     del django
 
 
@@ -516,11 +507,11 @@ def check_python_dependencies(silent=False):
         'six',
         'pytz',
         'rest_framework',
-        'compressor',
+        # 'compressor',
         'statici18n',
         'jsonfield',
         'dateutil',
-        'constance',
+        # 'constance',
         'openpyxl',
     ] # yapf: disable
     for pkg in pkgs:
@@ -817,6 +808,13 @@ def check_necessary_files():
         os.path.join(cwd, 'conf', 'seahub_settings.py'),
     ]
 
+    # seahub.db isn't create with a MySQL installation and crash the startup
+    with open(files[3], 'r') as f:
+        for line in f:
+            if 'DATABASES' in line:
+                del(files[2])
+                break
+
     for fpath in files:
         if not os.path.exists(fpath):
             error('%s not found' % fpath)
