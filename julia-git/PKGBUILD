# Maintainer: Yichao Yu <yyc1992@gmail.com>
# Contributor: Lex Black <autumn-wind at web dot de>
# Contributor: Michael Jakl <jakl.michael@gmail.com>
# With contributions from many kind people at https://aur.archlinux.org/packages/julia-git/

BUILD_DOC=1

pkgbase=julia-git
pkgname=julia-git

if [[ $CARCH != x86_64 ]]; then
    BUILD_DOC=0
fi

if ((BUILD_DOC)); then
    pkgname+=('julia-git-docs')
fi

case $CARCH in
  x86_64|i686|aarch64|armv7h)
    makedepends_llvm=("llvm-julia>=5.0" "llvm-julia<6.0")
    depends_llvm=("llvm-libs-julia>=5.0" "llvm-libs-julia<6.0")
    ;;
  # armv7h)
  #   makedepends_llvm=("llvm-svn")
  #   depends_llvm=("llvm-libs-svn")
  #   ;;
  *)
    echo "Unsupported Arch \"$CARCH\"" >&2
    ;;
esac

epoch=1
pkgver=0.7.0.DEV.2179.g26c7ecbb12
pkgrel=1
pkgdesc="Julia is a high-level, high-performance, dynamic programming language."
arch=('any' 'i686' 'x86_64' 'armv7h' 'aarch64')
url="http://julialang.org"
license=('GPL')
makedepends=(gcc-fortran arpack fftw git gmp libgit2-julia libunwind-git
             "${makedepends_llvm[@]}" mpfr pcre2 suitesparse
             openspecfun openblas libutf8proc-git patchelf openblas-lapack
             openlibm mbedtls libssh2 libtinfo)
options=('debug' '!strip' '!buildflags')
source=('git://github.com/JuliaLang/julia'
        0001-Revert-turn-on-deprecation-warnings-for-type-and-imm.patch
        0002-Revert-deprecation-warning-for-old-parametric-method.patch
        0001-Revert-Replace-quiet-with-banner-23343.patch
        0001-Remove-code-that-are-not-needed-will-not-make-sense-.patch
        0002-Move-CPU-feature-detection-functions-to-processor.cp.patch
        0003-Add-X86-CPU-name-and-feature-detection.patch
        0004-Add-AArch32-and-AArch64-CPU-name-and-feature-detecti.patch
        0005-Implement-fallback-CPU-detection-and-dispatch-API.patch
        0006-Use-processor.cpp-API-in-disasm.cpp.patch
        0007-Use-processor.cpp-API-to-initialize-LLVM-JIT.patch
        0008-Implement-function-multi-versioning-in-sysimg.patch
        0009-Finish-up-function-multiversioning-support.patch
        0001-Try-re-enable-frame-pointer-omission.patch
        0001-Add-install-nodoc-make-target-to-skip-building-and-i.patch)
md5sums=('SKIP'
         '91a0c77dc0700ff283d3aaaac67a9147'
         '84d6c1e407839b1459278b35c245e3ad'
         'b3c5a4ba02fbbfa53b7043beb0242156'
         '585bf414f889b7eb41d4f3602ffca9e3'
         '8214838d79ed08f8e9c57cb50728a5b1'
         '84ba13eccb70173f208c5a3521649ed7'
         '6024dc9adb361708a85952e47f40c821'
         '25a92a86d549d81248ed4d94b9bc184d'
         'f5067bc584aa319ad2379208e82a6a34'
         '7d626ef30f7ccccef9b94b7bc8b06b93'
         'f6a713513a1a720e83fdb2bf0a056fde'
         '73216180a27604bc96dcfe45d463da3d'
         '91bc8836614d83cf1aebe79e455b181f'
         '2222d3eabfe6040a8cca466303c86d2b')

pkgver() {
  cd julia

  last_tag=$(git describe --tags --abbrev=0)

  #collect the contents
  commit_short=$(git rev-parse --short HEAD)
  verchanged=$(git blame -L ,1 -sl -- VERSION | cut -f 1 -d " ")
  build_number=$(git rev-list --count HEAD "^$verchanged")
  # Combine version from VERSION file with rev-count and latest commit
  printf "%s.%s.g%s" "$(git show HEAD:VERSION | sed 's/-/./g')" \
         "$build_number" "$commit_short"
}

julia_opts=(prefix=/usr sysconfdir=/etc
            USE_SYSTEM_LLVM=1
            USE_SYSTEM_OPENLIBM=1
            USE_SYSTEM_LIBUNWIND=1
            USE_SYSTEM_PCRE=1
            USE_SYSTEM_OPENSPECFUN=1
            USE_SYSTEM_BLAS=1
            USE_SYSTEM_LAPACK=1
            USE_SYSTEM_FFTW=1
            USE_SYSTEM_GMP=1
            USE_SYSTEM_MPFR=1
            USE_SYSTEM_ARPACK=1
            USE_SYSTEM_SUITESPARSE=1
            USE_SYSTEM_UTF8PROC=1
            USE_SYSTEM_LIBGIT2=1
            USE_SYSTEM_LIBSSH2=1
            USE_SYSTEM_MBEDTLS=1
            USE_SYSTEM_CURL=1
            USE_SYSTEM_PATCHELF=1
            USE_LLVM_SHLIB=1
            LLVM_USE_CMAKE=0 # Workaround LLVM linking with system LLVM
            LIBBLASNAME=libopenblas
            LIBBLAS=-lopenblas
            LIBLAPACKNAME=libopenblas
            LIBLAPACK=-lopenblas)

_x86_target='generic;haswell,clone_all,-rdrnd;skylake,base(1),-rdrnd;cannonlake,base(1),-rdrnd'
_arm_target='armv7-a;armv7-a,neon;armv7-a,neon,vfp4'
_aa64_target='generic;cortex-a57;thunderx2t99'

case "$CARCH" in
  x86_64)
    julia_opts=("${julia_opts[@]}" MARCH=x86-64 JULIA_CPU_TARGET="${_x86_target}")
    ;;
  i686)
    julia_opts=("${julia_opts[@]}" MARCH=pentium4 JULIA_CPU_TARGET="${_x86_target}")
    ;;
  aarch64)
    julia_opts=("${julia_opts[@]}" MARCH=armv8-a JULIA_CPU_TARGET="${_aa64_target}")
    ;;
  armv7h)
    julia_opts=("${julia_opts[@]}" MARCH=armv7-a JULIA_CPU_TARGET="${_arm_target}")
    ;;
esac

prepare() {
  rm -rf bin/
  mkdir -p bin/

  for p in cc c++ gcc g++; do
    cat > bin/$p <<EOF
exec /usr/bin/$p "\${@/#-O0/-Og}" -fasynchronous-unwind-tables
EOF
    chmod +x bin/$p
  done

  cd julia

  git reset --hard HEAD
  git clean -fdx

  patch -Np1 < ../0001-Revert-turn-on-deprecation-warnings-for-type-and-imm.patch
  patch -Np1 < ../0002-Revert-deprecation-warning-for-old-parametric-method.patch
  patch -Np1 < ../0001-Remove-code-that-are-not-needed-will-not-make-sense-.patch
  patch -Np1 < ../0002-Move-CPU-feature-detection-functions-to-processor.cp.patch
  patch -Np1 < ../0003-Add-X86-CPU-name-and-feature-detection.patch
  patch -Np1 < ../0004-Add-AArch32-and-AArch64-CPU-name-and-feature-detecti.patch
  patch -Np1 < ../0005-Implement-fallback-CPU-detection-and-dispatch-API.patch
  patch -Np1 < ../0006-Use-processor.cpp-API-in-disasm.cpp.patch
  patch -Np1 < ../0007-Use-processor.cpp-API-to-initialize-LLVM-JIT.patch
  patch -Np1 < ../0008-Implement-function-multi-versioning-in-sysimg.patch
  patch -Np1 < ../0009-Finish-up-function-multiversioning-support.patch
  patch -Np1 < ../0001-Try-re-enable-frame-pointer-omission.patch
  patch -Np1 < ../0001-Add-install-nodoc-make-target-to-skip-building-and-i.patch
}

build_in() {
  cd "$1"

  opts=("${@:3}")
  export PATH="${srcdir}/bin:${PATH}"
  if [[ $CARCH = i686 ]]; then
      CFLAGS="${CFLAGS//-march=i686/-march=pentium4} -march=pentium4"
      CXXFLAGS="${CXXFLAGS//-march=i686/-march=pentium4} -march=pentium4"
  fi
  export CFLAGS+=' -Wno-pedantic -Wno-clobbered'
  export CXXFLAGS+=' -Wno-pedantic -Wno-clobbered'

  make "${opts[@]}" -C base version_git.jl.phony
  make "${opts[@]}" -C deps
  make "${opts[@]}" julia-ui-release
  if (($2)); then
      make "${opts[@]}" release debug docs
  else
    make "${opts[@]}" release debug
  fi

  # Check to detect issues like JuliaLang/julia#13820
  usr/bin/julia -e '0'
  usr/bin/julia-debug -e '0'
}

build() {
  build_in julia $BUILD_DOC "${julia_opts[@]}"
}

package-julia-in() {
  arch=('i686' 'x86_64' 'armv7h' 'aarch64')
  depends=(arpack fftw gmp libgit2-julia libunwind-git "${depends_llvm[@]}"
           mpfr pcre2 hicolor-icon-theme xdg-utils suitesparse
           openspecfun openblas libutf8proc-git openblas-lapack
           mbedtls libssh2)
  conflicts=('julia')
  opts=("${@:2}")

  cd "$1"

  if ((BUILD_DOC)); then
    make install DESTDIR="$pkgdir" "${opts[@]}"
  else
    make install-nodoc DESTDIR="$pkgdir" "${opts[@]}"
    # Manually install man pages
    mkdir -p "$pkgdir"/usr/share/man/man1/
    install -m644 -t "$pkgdir"/usr/share/man/man1/ usr/share/man/man1/julia.1
  fi

  # Remove doc files (should be non for nodoc install)
  rm -rf "$pkgdir/usr/share/doc/julia"

  ver=$("$pkgdir/usr/bin/julia" \
            --startup-file=no \
            -e 'print(VERSION.major, ".", VERSION.minor, ".", VERSION.patch)')

  provides=("julia=2:$ver")
}

package_julia-git() {
  package-julia-in julia "${julia_opts[@]}"
  depends+=(openlibm)
  if [[ "$CARCH" = x86_64 ]]; then
      replaces=(julia-git-avx2)
  fi
}

package_julia-git-docs() {
  arch=('any')
  pkgdesc+=" (Documents)"
  provides=('julia-docs' 'julia-doc')
  conflicts=('julia-docs' 'julia-doc' 'julia-git-doc' 'julia-doc-git')
  replaces=('julia-git-doc' 'julia-doc-git')

  cd julia/doc/_build

  mkdir -p "$pkgdir"/usr/share/doc/julia/
  cp -dpr --no-preserve=ownership html "$pkgdir"/usr/share/doc/julia/
}
