From e95bc3bc93d9e996b3005a21d591c9d0fd5f2457 Mon Sep 17 00:00:00 2001
From: Yichao Yu <yyc1992@gmail.com>
Date: Wed, 5 Jul 2017 05:30:13 -0400
Subject: [PATCH 4/5] Use a local buffer in `modf`

Fix #21591
---
 base/math.jl | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/base/math.jl b/base/math.jl
index 20d39089b4..288cf0dcd6 100644
--- a/base/math.jl
+++ b/base/math.jl
@@ -722,16 +722,16 @@ julia> modf(3.5)
 """
 modf(x) = rem(x,one(x)), trunc(x)
 
-const _modff_temp = Ref{Float32}()
 function modf(x::Float32)
-    f = ccall((:modff,libm), Float32, (Float32,Ptr{Float32}), x, _modff_temp)
-    f, _modff_temp[]
+    temp = Ref{Float32}()
+    f = ccall((:modff, libm), Float32, (Float32, Ptr{Float32}), x, temp)
+    f, temp[]
 end
 
-const _modf_temp = Ref{Float64}()
 function modf(x::Float64)
-    f = ccall((:modf,libm), Float64, (Float64,Ptr{Float64}), x, _modf_temp)
-    f, _modf_temp[]
+    temp = Ref{Float64}()
+    f = ccall((:modf, libm), Float64, (Float64, Ptr{Float64}), x, temp)
+    f, temp[]
 end
 
 @inline function ^(x::Float64, y::Float64)
-- 
2.13.2

