# Maintainer: Evangelos Foutras <evangelos@foutrelis.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Sebastian Nowicki <sebnow@gmail.com>
# Contributor: Devin Cofer <ranguvar{AT]archlinux[DOT}us>
# Contributor: Tobias Kieslich <tobias@justdreams.de>
# Contributor: Geoffroy Carrier <geoffroy.carrier@aur.archlinux.org>
# Contributor: Tomas Lindquist Olsen <tomas@famolsen.dk>
# Contributor: Roberto Alsina <ralsina@kde.org>
# Contributor: Gerardo Exequiel Pozzi <vmlinuz386@yahoo.com.ar>

pkgname=('llvm-julia' 'llvm-libs-julia' 'llvm-ocaml-julia' 'lld-julia' 'lldb-julia'
         'clang-julia' 'clang-tools-extra-julia')
pkgver=4.0.1
pkgrel=1
_ocaml_ver=4.05.1
arch=(i686 x86_64 armv7h aarch64)
url="http://llvm.org/"
license=('custom:University of Illinois/NCSA Open Source License')
makedepends=('cmake' 'libffi' 'python2' "ocaml=$_ocaml_ver" 'python-sphinx'
             'ocaml-ctypes' 'ocaml-findlib' 'libedit' 'swig')
# Use gcc-multilib to build 32-bit compiler-rt libraries on x86_64 (FS#41911)
makedepends_x86_64=('gcc-multilib')
options=('staticlibs' '!strip')
source=(http://releases.llvm.org/$pkgver/llvm-$pkgver.src.tar.xz
        http://releases.llvm.org/$pkgver/cfe-$pkgver.src.tar.xz
        http://releases.llvm.org/$pkgver/clang-tools-extra-$pkgver.src.tar.xz
        http://releases.llvm.org/$pkgver/compiler-rt-$pkgver.src.tar.xz
        http://releases.llvm.org/$pkgver/lld-$pkgver.src.tar.xz
        http://releases.llvm.org/$pkgver/lldb-$pkgver.src.tar.xz
        llvm-D27629-AArch64-large_model.patch
        llvm-D28215_FreeBSD_shlib.patch
        llvm-D28759-loopclearance.patch
        llvm-D28786-callclearance.patch
        llvm-D32593.patch
        llvm-D33179.patch
        llvm-D32203-SORA-non-integral.patch
        llvm-D33110-codegen-prepare-inttoptr.patch
        llvm-D30478-VNCoercion.patch
        llvm-D32196-LIR-non-integral.patch
        llvm-D32208-coerce-non-integral.patch
        llvm-D32623-GVN-non-integral.patch
        llvm-D33129-scevexpander-non-integral.patch
        llvm-VNCoercion-signatures.patch
        llvm-VNCoercion-template.patch
        llvm-Yet-another-fix.patch
        llvm-loadcse-addrspace.patch
        llvm-jump-table-large-model.patch
        # Arch patches
        0001-GCC-compatibility-Ignore-the-fno-plt-flag.patch
        0002-Enable-SSP-and-PIE-by-default.patch
        disable-llvm-symbolizer-test.patch
        lldb-gcc7.patch
        lldb-libedit.patch
        llvm-config.h)
sha256sums=('da783db1f82d516791179fe103c71706046561f7972b18f0049242dee6712b51'
            '61738a735852c23c3bdbe52d035488cdb2083013f384d67c1ba36fabebd8769b'
            '35d1e64efc108076acbe7392566a52c35df9ec19778eb9eb12245fc7d8b915b6'
            'a3c87794334887b93b7a766c507244a7cdcce1d48b2e9249fc9a94f2c3beb440'
            '63ce10e533276ca353941ce5ab5cc8e8dcd99dbdd9c4fa49f344a212f29d36ed'
            '8432d2dfd86044a0fc21713e0b5c1d98e1d8aad863cf67562879f47f841ac47b'
            'd1257409dcb2cd797f6b09f66890cf042a29e7c2ca266ea68d64484cdc06f36f'
            '5502ad544316a3371215139dc957e5fa7c4d9fd0c966644ea29fc07614211460'
            '92f8c6f7ff947520b44fc9f92e6983fe8a05c2ec2cebe5784947688274a8888d'
            '0ce2226fce1402b87679155311780695820f58928512ada6584651c985ddc8c0'
            '3931ac87a7c8790f12bafa26018cd7fccc926cc5f563e120fbec815066b2ddf7'
            '29da9487dc577dc4565e767e6dd49f5934bcf0bc2fdedd5b25afce24486a5b7d'
            '6c67f5f07e2c10731d2f8bea2696a733a7ac63fa26c91729f8177ab6d9a982ac'
            '781f849ba6df1ef4d03554001e408d06e070ed9077cbb39720d1c6fd0848f929'
            'b874cb3fe2d1a274080173f97fdc1ec49dbb6daf36d14279cbb837d523d024ff'
            'f379cccc7c2128f97be066a005aa960e334fc4527df9570c4b63c2cde8d487eb'
            'e9e1a95306066296cc3ceb8285ea402d93bad4402c3756fc08fad32113690417'
            'd83f083409f6340b51d5dfbca5b4266a06e689ddef8312fcd17bc03758926053'
            '5256d2028995263610780d2378535329671a2c2a731ef3f4b0efbb2562c9d730'
            'ba97d2009dbf588d9e648744c442f190ef238db77b1a80ac629d36c45f027b66'
            '0eceb7403ea11ff6b7812f6580ce43884020c9338bb5ed6eea335d1dedb1256a'
            'ed8b43c93033ff028f63cf66db6122a267806180d060a19a9e1b560422ef185c'
            'a69856668b11b757a531c779fbf63c01a0b86a6389d1c1b31f4e98bc07eca0d3'
            'f65ec7a7b5e147a89c7b93d2c3bafc725f17ed2714e31c73cd1d071652af2e4c'
            'd26239d03983fab1f34970b94d727379ca0be689f5826e50503c4d2f314f207a'
            '686b2e05a151c9a4b36d5090ddc986432ad746bc6060a00928ee3b52d6b3e723'
            '6fff47ab5ede79d45fe64bb4903b7dfc27212a38e6cd5d01e60ebd24b7557359'
            '10cca2f593c711b1b547f479f9f783ab88f9a64b356519d9aa1367e0ff6da73a'
            'b80bda6dc26792e499b3150e13c3017be4a65280b4b9f5c9f4c07b55a46d93b6'
            '597dc5968c695bbdbb0eac9e8eb5117fcd2773bc91edf5ec103ecffffab8bc48')

_FLTO='-flto'

if [[ "${CARCH}" == "aarch64" ]]; then
    # GCC miscompiles LLVM on AArch64 with LTO
    _FLTO=''
fi

apply_julia_patch() {
  local name=$1
  msg "Applying Julia patch $name"
  patch -p1 < ../llvm-$name.patch
}

prepare() {
  rm -rf bin/
  mkdir -p bin/

  for p in cc c++ gcc g++; do
    cat > bin/$p <<EOF
#!/bin/bash
exec /usr/bin/$p $_FLTO "\${@}"
EOF
    chmod +x bin/$p
  done

  cd "$srcdir/llvm-$pkgver.src"
  mkdir build

  mv "$srcdir/cfe-$pkgver.src" tools/clang
  mv "$srcdir/clang-tools-extra-$pkgver.src" tools/clang/tools/extra
  mv "$srcdir/compiler-rt-$pkgver.src" projects/compiler-rt
  mv "$srcdir/lld-$pkgver.src" tools/lld
  mv "$srcdir/lldb-$pkgver.src" tools/lldb

  apply_julia_patch D27629-AArch64-large_model
  apply_julia_patch D28215_FreeBSD_shlib
  apply_julia_patch D28759-loopclearance
  apply_julia_patch D28786-callclearance
  apply_julia_patch D32593
  apply_julia_patch D33179
  apply_julia_patch D32203-SORA-non-integral
  apply_julia_patch D33110-codegen-prepare-inttoptr
  apply_julia_patch D30478-VNCoercion
  apply_julia_patch VNCoercion-signatures
  apply_julia_patch VNCoercion-template
  apply_julia_patch D32196-LIR-non-integral
  apply_julia_patch D32208-coerce-non-integral
  apply_julia_patch D32623-GVN-non-integral
  apply_julia_patch D33129-scevexpander-non-integral
  apply_julia_patch Yet-another-fix
  apply_julia_patch loadcse-addrspace
  apply_julia_patch jump-table-large-model

  # Arch patches
  msg "Applying Arch patches"
  # Disable test that fails when compiled as PIE
  # https://bugs.llvm.org/show_bug.cgi?id=31870
  patch -Np1 <../disable-llvm-symbolizer-test.patch

  # Enable SSP and PIE by default
  patch -Np1 -d tools/clang <../0001-GCC-compatibility-Ignore-the-fno-plt-flag.patch
  patch -Np1 -d tools/clang <../0002-Enable-SSP-and-PIE-by-default.patch

  # Fix LLDB input with recent libedit versions
  patch -Np0 -d tools/lldb <../lldb-gcc7.patch
  patch -Np1 -d tools/lldb <../lldb-libedit.patch
}

build() {
  cd "$srcdir/llvm-$pkgver.src/build"

  export PATH="${srcdir}/bin:${PATH}"
  CFLAGS+=' -ggdb1 -O3 -fasynchronous-unwind-tables'
  CXXFLAGS+=' -ggdb1 -O3 -fasynchronous-unwind-tables'
  LDFLAGS+=' -O3 -fasynchronous-unwind-tables'

  cmake \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DLLVM_BUILD_LLVM_DYLIB=ON \
      -DLLVM_LINK_LLVM_DYLIB=ON \
      -DLLVM_INSTALL_UTILS=ON \
      -DLLVM_ENABLE_RTTI=ON \
      -DLLVM_ENABLE_FFI=ON \
      -DLLVM_BUILD_TESTS=ON \
      -DLLVM_BUILD_DOCS=ON \
      -DLLVM_ENABLE_SPHINX=ON \
      -DLLVM_ENABLE_DOXYGEN=OFF \
      -DLLDB_DISABLE_LIBEDIT=1 \
      -DSPHINX_WARNINGS_AS_ERRORS=OFF \
      -DFFI_INCLUDE_DIR=$(pkg-config --variable=includedir libffi) \
      -DLLVM_BINUTILS_INCDIR=/usr/include \
      ..

  make
  make ocaml_doc

  # Disable automatic installation of components that go into subpackages
  sed -i '/\(clang\|lld\|lldb\)\/cmake_install.cmake/d' tools/cmake_install.cmake
  sed -i '/extra\/cmake_install.cmake/d' tools/clang/tools/cmake_install.cmake
  sed -i '/compiler-rt\/cmake_install.cmake/d' projects/cmake_install.cmake
}

check() {
  cd "$srcdir/llvm-$pkgver.src/build"
  # make check-{llvm,clang,clang-tools,lld}
}

package_llvm-julia() {
  pkgdesc="Low Level Virtual Machine (with patch for julia)"
  depends=("llvm-libs-julia=$pkgver-$pkgrel" 'perl')
  conflicts=("llvm")
  provides=("llvm=$pkgver-$pkgrel")

  cd "$srcdir/llvm-$pkgver.src"

  make -C build DESTDIR="$pkgdir" install

  # Remove documentation sources
  rm -r "$pkgdir"/usr/share/doc/llvm/html/{_sources,.buildinfo}

  # The runtime libraries go into llvm-libs
  mv -f "$pkgdir"/usr/lib/lib{LLVM,LTO}*.so* "$srcdir"
  mv -f "$pkgdir"/usr/lib/LLVMgold.so "$srcdir"

  # OCaml bindings go to a separate package
  rm -rf "$srcdir"/ocaml.{lib,doc}
  mv "$pkgdir/usr/lib/ocaml" "$srcdir/ocaml.lib"
  mv "$pkgdir/usr/share/doc/llvm/ocaml-html" "$srcdir/ocaml.doc"

  if [[ $CARCH == x86_64 ]]; then
      # Needed for multilib (https://bugs.archlinux.org/task/29951)
      # Header stub is taken from Fedora
      mv "$pkgdir/usr/include/llvm/Config/llvm-config"{,-64}.h
      cp "$srcdir/llvm-config.h" "$pkgdir/usr/include/llvm/Config/llvm-config.h"
  fi

  install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_llvm-libs-julia() {
  pkgdesc="Low Level Virtual Machine (runtime libraries) (with patch for julia)"
  depends=('gcc-libs' 'zlib' 'libffi' 'libedit' 'ncurses')
  conflicts=("llvm-libs")
  provides=("llvm-libs=$pkgver-$pkgrel")

  install -d "$pkgdir/usr/lib"
  cp -P \
     "$srcdir"/lib{LLVM,LTO}*.so* \
     "$srcdir"/LLVMgold.so \
     "$pkgdir/usr/lib/"

  # Symlink LLVMgold.so from /usr/lib/bfd-plugins
  # https://bugs.archlinux.org/task/28479
  install -d "$pkgdir/usr/lib/bfd-plugins"
  ln -s ../LLVMgold.so "$pkgdir/usr/lib/bfd-plugins/LLVMgold.so"

  install -Dm644 "$srcdir/llvm-$pkgver.src/LICENSE.TXT" \
          "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_llvm-ocaml-julia() {
  pkgdesc="OCaml bindings for LLVM (with patch for julia)"
  depends=("llvm-julia=$pkgver-$pkgrel" "ocaml=$_ocaml_ver" 'ocaml-ctypes')
  conflicts=("llvm-ocaml")
  provides=("llvm-ocaml=$pkgver-$pkgrel")

  cd "$srcdir/llvm-$pkgver.src"

  install -d "$pkgdir"/{usr/lib,usr/share/doc/llvm-ocaml}
  cp -a "$srcdir/ocaml.lib" "$pkgdir/usr/lib/ocaml"
  cp -a "$srcdir/ocaml.doc" "$pkgdir/usr/share/doc/llvm-ocaml/html"

  install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_lld-julia() {
  pkgdesc="Linker from the LLVM project (with patch for julia)"
  url="http://lld.llvm.org/"
  depends=("llvm-libs=$pkgver-$pkgrel")
  conflicts=("lld")
  provides=("lld=$pkgver-$pkgrel")

  cd "$srcdir/llvm-$pkgver.src"

  make -C build/tools/lld DESTDIR="$pkgdir" install

  # Remove documentation sources
  rm -r "$pkgdir"/usr/share/doc/lld/html/{_sources,.buildinfo}

  install -Dm644 tools/lld/LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_lldb-julia() {
  pkgdesc="Next generation, high-performance debugger (with patch for julia)"
  url="http://lldb.llvm.org/"
  depends=("llvm-libs-julia=$pkgver-$pkgrel" 'libxml2' 'python2' 'python2-six')
  conflicts=("lldb")
  provides=("lldb=$pkgver-$pkgrel")

  cd "$srcdir/llvm-$pkgver.src"

  make -C build/tools/lldb DESTDIR="$pkgdir" install

  # https://bugs.archlinux.org/task/50759
  sed -i "/import_module('_lldb')/s/_lldb/lldb.&/" \
      "$pkgdir/usr/lib/python2.7/site-packages/lldb/__init__.py"

  # Remove bundled six library
  rm "$pkgdir/usr/lib/python2.7/site-packages/six.py"

  # Compile Python scripts
  python2 -m compileall "$pkgdir/usr/lib/python2.7/site-packages/lldb"
  python2 -O -m compileall "$pkgdir/usr/lib/python2.7/site-packages/lldb"

  install -Dm644 tools/lldb/LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_clang-julia() {
  pkgdesc="C language family frontend for LLVM (with patch for julia)"
  url="http://clang.llvm.org/"
  depends=("llvm-libs-julia=$pkgver-$pkgrel" 'gcc' 'libxml2')
  optdepends=('openmp: OpenMP support in clang with -fopenmp'
              'python2: for scan-view and git-clang-format')
  provides=("clang=$pkgver-$pkgrel" "clang-analyzer=$pkgver")
  conflicts=('clang' 'clang-analyzer')
  replaces=('clang-analyzer-julia')

  cd "$srcdir/llvm-$pkgver.src"

  make -C build/tools/clang DESTDIR="$pkgdir" install
  make -C build/projects/compiler-rt DESTDIR="$pkgdir" install

  # Remove documentation sources
  rm -r "$pkgdir"/usr/share/doc/clang/html/{_sources,.buildinfo}

  # Move analyzer scripts out of /usr/libexec
  mv "$pkgdir"/usr/libexec/{ccc,c++}-analyzer "$pkgdir/usr/lib/clang/"
  rmdir "$pkgdir/usr/libexec"
  sed -i 's|libexec|lib/clang|' "$pkgdir/usr/bin/scan-build"

  # Install Python bindings
  install -d "$pkgdir/usr/lib/python2.7/site-packages"
  cp -a tools/clang/bindings/python/clang "$pkgdir/usr/lib/python2.7/site-packages/"

  # Use Python 2
  sed -i 's|/usr/bin/env python|&2|' \
      "$pkgdir/usr/bin/scan-view" \
      "$pkgdir/usr/bin/git-clang-format" \
      "$pkgdir/usr/share/clang/clang-format-diff.py"

  # Compile Python scripts
  python2 -m compileall "$pkgdir"
  python2 -O -m compileall "$pkgdir"

  install -Dm644 tools/clang/LICENSE.TXT \
          "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_clang-tools-extra-julia() {
  pkgdesc="Extra tools built using clang's tooling APIs (with patch for julia)"
  url="http://clang.llvm.org/"
  depends=("clang-julia=$pkgver-$pkgrel")
  provides=("clang-tools-extra=$pkgver-$pkgrel")
  conflicts=("clang-tools-extra")

  cd "$srcdir/llvm-$pkgver.src"

  make -C build/tools/clang/tools/extra DESTDIR="$pkgdir" install

  # Remove documentation sources
  rm -r "$pkgdir"/usr/share/doc/clang-tools/html/{_sources,.buildinfo}

  # Use Python 2
  sed -i 's|/usr/bin/env python|&2|' \
      "$pkgdir"/usr/share/clang/{clang-tidy-diff,run-clang-tidy,run-find-all-symbols}.py

  install -Dm644 tools/clang/tools/extra/LICENSE.TXT \
          "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}
