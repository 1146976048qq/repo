# Contributor: Weng Xuetian <wengxt@gmail.com>

# PGO might not build for you. And it takes very long time to compile.
_enable_pgo="n"
# JEMALLOC not works for me, at least. You can just try, but might waste time.
_enable_jemalloc_pgo="n"


pkgname=firefox-kde-opensuse
pkgver=22.0
pkgrel=1
pkgdesc="Standalone web browser from mozilla.org with OpenSUSE patch, integrate better with KDE"
arch=('i686' 'x86_64')
license=('MPL' 'GPL' 'LGPL')
depends=('gtk2' 'mozilla-common' 'libxt' 'startup-notification' 'mime-types' 'dbus-glib' 'alsa-lib'
         'libnotify' 'desktop-file-utils' 'hicolor-icon-theme'
         'libvpx' 'libevent' 'nss>=3.14.1' 'hunspell' 'sqlite'
         'kmozillahelper')
makedepends=('unzip' 'zip' 'diffutils' 'python2' 'yasm' 'mesa'
             'autoconf2.13' 'libidl2' 'xorg-server-xvfb' 'imake')
provides=("firefox=${pkgver}")
conflicts=('firefox')
optdepends=('networkmanager: Location detection via available WiFi networks')
url="http://www.mozilla.org/projects/firefox"
install=firefox.install
options=(!emptydirs)
source=(https://ftp.mozilla.org/pub/mozilla.org/firefox/releases/$pkgver/source/firefox-$pkgver.source.tar.bz2
        mozconfig mozconfig-pgo firefox.desktop firefox-install-dir.patch vendor.js kde.js shared-libs.patch
        firefox-kde.patch
        mozilla-nongnome-proxies.patch
        mozilla-kde.patch
	)

build() {
  cd "mozilla-release"

  if [[ $_enable_pgo == "y" ]]; then
      msg "PGO is enabled"
      cp "../mozconfig-pgo" .mozconfig
  else
      msg "PGO is disabled"
      cp "../mozconfig" .mozconfig
  fi

  patch -Np1 -i "../firefox-install-dir.patch" || return 1
  patch -Np1 -i "../shared-libs.patch" || return 1

  rm -f content/media/gstreamer/nsGStreamerFormatHelper.cpp \
        content/media/gstreamer/nsGStreamerFormatHelper.h
  rm -f browser/components/shell/src/nsKDEShellService.cpp \
        browser/components/shell/src/nsKDEShellService.h \
        browser/components/shell/src/nsUnixShellService.cpp \
        browser/components/shell/src/nsUnixShellService.h \
        browser/base/content/browser-kde.xul
  rm -f toolkit/xre/nsKDEUtils.cpp \
        toolkit/xre/nsKDEUtils.h \
        uriloader/exthandler/unix/nsCommonRegistry.cpp \
        uriloader/exthandler/unix/nsCommonRegistry.h \
        uriloader/exthandler/unix/nsKDERegistry.cpp \
        uriloader/exthandler/unix/nsKDERegistry.h \
        toolkit/content/widgets/dialog-kde.xml \
        toolkit/content/widgets/preferences-kde.xml


  msg "apply mozilla-nongnome-proxies.patch"
  patch -Np1 -i "../mozilla-nongnome-proxies.patch" || return 1
  msg "apply mozilla-kde.patch"
  patch -Np1 -i "../mozilla-kde.patch" || return 1
  msg "apply firefox-kde.patch"
  patch -Np1 -i "../firefox-kde.patch" || return 1


  # Fix PRE_RELEASE_SUFFIX
  sed -i '/^PRE_RELEASE_SUFFIX := ""/s/ ""//' \
    browser/base/Makefile.in

  # WebRTC build tries to execute "python" and expects Python 2
  # Workaround taken from chromium PKGBUILD
  mkdir -p "$srcdir/python2-path"
  ln -s /usr/bin/python2 "$srcdir/python2-path/python"
  export PATH="$srcdir/python2-path:$PATH"

  export LDFLAGS="$LDFLAGS -Wl,-rpath,/usr/lib/firefox"
  export PYTHON="/usr/bin/python2"
  export MOZ_MAKE_FLAGS="$MAKEFLAGS"
  unset MAKEFLAGS
  unset CPPFLAGS

  # PGO
  if [[ $_enable_pgo == "y" ]]; then
      if [[ $_enable_jemalloc_pgo == "y" ]]; then
        sed -i '/^NO_PROFILE_GUIDED_OPTIMIZE = 1$/d' \
            memory/jemalloc/Makefile.in
      fi

      # Enable PGO
      export MOZ_PGO=1
      export DISPLAY=:99
      Xvfb -nolisten tcp -extension GLX -screen 0 1280x1024x24 $DISPLAY &
      _fail=0
  
      make -f client.mk build || _fail=1

      kill $! || true
      return $_fail
  else
      make -j1 -f client.mk build
  fi

}

package() {
  cd mozilla-release
  make -j1 -f client.mk DESTDIR="$pkgdir" install

  install -Dm644 ../vendor.js "$pkgdir/usr/lib/firefox/browser/defaults/preferences/vendor.js"
  install -Dm644 ../kde.js "$pkgdir/usr/lib/firefox/browser/defaults/preferences/kde.js"

  for i in 16 22 24 32 48 256; do
      install -Dm644 browser/branding/official/default$i.png \
        "$pkgdir/usr/share/icons/hicolor/${i}x${i}/apps/firefox.png"
  done

  install -Dm644 ../firefox.desktop \
    "$pkgdir/usr/share/applications/firefox.desktop"

  # Use system-provided dictionaries
  rm -rf "$pkgdir"/usr/lib/firefox/{dictionaries,hyphenation}
  ln -s /usr/share/hunspell "$pkgdir/usr/lib/firefox/dictionaries"
  ln -s /usr/share/hyphen "$pkgdir/usr/lib/firefox/hyphenation"

  # We don't want the development stuff
  rm -r "$pkgdir"/usr/{include,lib/firefox-devel,share/idl}

  #workaround for now
  #https://bugzilla.mozilla.org/show_bug.cgi?id=658850
  ln -sf firefox "$pkgdir/usr/lib/firefox/firefox-bin"
}

md5sums=('4ffb6d1c1a04ca8e3dbca23df09626dd'
         'a35236fe53941392a279e45e0713163c'
         '57d7c8bcdba9025e36fbbe4b794550a4'
         '1df7fd9afd75d06decb129518a769133'
         '150ac0fb3ac7b2114c8e8851a9e0516c'
         '0d053487907de4376d67d8f499c5502b'
         '75df0f88cc7a7fa7d522459e4ff82cc5'
         '52e52f840a49eb1d14be1c0065b03a93'
         '2221965e4bd5f913cf33814b8b4973c6'
         '28f61de31540e20522aefdbe88a83fa8'
         '03f4c78952c3e3d1cc80b3fd2f2346fd')
